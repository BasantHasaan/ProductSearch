{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["searchkit","SearchkitManager","ProductHitsGridItem","props","bemBlocks","result","url","_source","brand","extend","highlight","className","item","mix","container","data-qa","price","name","href","target","alt","src","image","width","height","ProductHitsListItem","App","autofocus","searchOnChange","prefixQueryFields","fields","title","id","translations","options","label","field","order","hitsPerPage","highlightFields","sourceFilter","hitComponents","key","itemComponent","defaultOption","scrollTo","suggestionsField","showNumbers","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0SAcMA,G,OAAY,IAAIC,mBADT,mCAGPC,EAAsB,SAACC,GAAU,IAC9BC,EAAqBD,EAArBC,UAAWC,EAAUF,EAAVE,OACdC,EAAM,kCAAoCD,EAAOE,QAAQC,MAC9CC,IAAO,GAAIJ,EAAOE,QAASF,EAAOK,WACjD,OACE,yBAAKC,UAAWP,EAAUQ,OAAOC,IAAIT,EAAUU,UAAU,SAAUC,UAAQ,OACzE,4BAAKV,EAAOE,QAAQC,OACpB,4BAAKH,EAAOE,QAAQS,OACpB,2BAAIX,EAAOE,QAAQU,MACnB,uBAAGC,KAAMZ,EAAKa,OAAO,UAClB,yBAAKJ,UAAQ,SAASK,IAAI,UAAUT,UAAWP,EAAUQ,KAAK,UAAWS,IAAKhB,EAAOE,QAAQe,MAAOC,MAAM,MAAMC,OAAO,WAO1HC,EAAsB,SAACtB,GAAU,IAC9BC,EAAqBD,EAArBC,UAAWC,EAAUF,EAAVE,OAC4BA,EAAOE,QAAQC,MAC9CC,IAAO,GAAIJ,EAAOE,QAASF,EAAOK,WACjD,OACE,yBAAKC,UAAWP,EAAUQ,OAAOC,IAAIT,EAAUU,UAAU,SAAUC,UAAQ,OACvE,4BAAKV,EAAOE,QAAQC,OACpB,4BAAKH,EAAOE,QAAQS,OACpB,2BAAIX,EAAOE,QAAQU,MACrB,yBAAKN,UAAWP,EAAUQ,KAAK,WAC7B,yBAAKQ,IAAKf,EAAOE,QAAQC,MAAOO,UAAQ,SAASM,IAAKhB,EAAOE,QAAQe,SAEvE,yBAAKX,UAAWP,EAAUQ,KAAK,eAiFtBc,E,uKArEX,OACE,kBAAC,oBAAD,CAAmB1B,UAAWA,GAC5B,kBAAC,SAAD,KACE,kBAAC,SAAD,KACE,yBAAKW,UAAU,WAAf,WACA,kBAAC,YAAD,CAAWgB,WAAW,EAAMC,gBAAgB,EAAMC,kBAAmB,CAAC,cAG1E,kBAAC,aAAD,KAEE,kBAAC,UAAD,KACE,kBAAC,yBAAD,CAAwBC,OAAQ,CAAC,YAAaC,MAAM,WAAWC,GAAG,cAgBpE,kBAAC,gBAAD,KACE,kBAAC,YAAD,KAEE,kBAAC,eAAD,KACE,kBAAC,YAAD,CAAWC,aAAc,CACvB,yBAAyB,8BAE3B,kBAAC,qBAAD,MACA,kBAAC,kBAAD,CAAiBC,QAAS,CACxB,CAACC,MAAM,YAAaC,MAAM,SAAUC,MAAM,QAC1C,CAACF,MAAM,aAAcC,MAAM,QAASC,MAAM,QAC1C,CAACF,MAAM,YAAaC,MAAM,QAASC,MAAM,WAI7C,kBAAC,eAAD,KACE,kBAAC,yBAAD,MACA,kBAAC,eAAD,QAIJ,kBAAC,mBAAD,CACIC,YAAa,GAAIC,gBAAiB,CAAC,QAAQ,YAC3CC,aAAc,CAAC,QAAQ,OAAO,QAAQ,YAEtCC,cAAe,CACb,CAACC,IAAI,OAAQX,MAAM,OAAQY,cAAczC,EAAqB0C,eAAc,GAC5E,CAACF,IAAI,OAAQX,MAAM,OAAQY,cAAclB,IAE3CoB,SAAS,SAEb,kBAAC,SAAD,CAAQC,iBAAkB,UAC1B,kBAAC,aAAD,CAAYC,aAAa,Y,GA7DnBC,aC3CEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1077f46a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport extend from 'lodash/extend'\nimport { SearchkitManager,SearchkitProvider,\n  SearchBox, RefinementListFilter, Pagination,\n  HierarchicalMenuFilter, HitsStats, SortingSelector, NoHits,\n  ResetFilters, RangeFilter, NumericRefinementListFilter,\n  ViewSwitcherHits, ViewSwitcherToggle, DynamicRangeFilter,\n  InputFilter, GroupedSelectedFilters,\n  Layout, TopBar, LayoutBody, LayoutResults,\n  MenuFilter,\n  ActionBar, ActionBarRow, SideBar } from 'searchkit'\nimport './index2.css'\n\nconst host = \"http://localhost:9200/products\"\nconst searchkit = new SearchkitManager(host)\n\nconst ProductHitsGridItem = (props)=> {\n  const {bemBlocks, result} = props\n  let url = \"http://localhost:9200/products/\" + result._source.brand\n  const source = extend({}, result._source, result.highlight)\n  return (\n    <div className={bemBlocks.item().mix(bemBlocks.container(\"item\"))} data-qa=\"hit\">\n      <h1>{result._source.brand}</h1>\n      <h1>{result._source.price}</h1>\n      <p>{result._source.name}</p>\n      <a href={url} target=\"_blank\">\n         <img data-qa=\"poster\" alt=\"Product\" className={bemBlocks.item(\"poster\")} src={result._source.image} width=\"170\" height=\"240\"/>\n        {/* // <div data-qa=\"title\" className={bemBlocks.item(\"title\")} dangerouslySetInnerHTML={{__html:source.title}}></div> */}\n      </a> \n    </div>\n  )\n}\n\nconst ProductHitsListItem = (props)=> {\n  const {bemBlocks, result} = props\n  let url = \"http://localhost:9200/products/\" + result._source.brand\n  const source = extend({}, result._source, result.highlight)\n  return (\n    <div className={bemBlocks.item().mix(bemBlocks.container(\"item\"))} data-qa=\"hit\">\n        <h1>{result._source.brand}</h1>\n        <h1>{result._source.price}</h1>\n        <p>{result._source.name}</p>\n      <div className={bemBlocks.item(\"poster\")}>\n        <img alt={result._source.brand} data-qa=\"poster\" src={result._source.image}/>\n      </div>\n      <div className={bemBlocks.item(\"details\")}>\n        {/* <a href={url} target=\"_blank\"><h2 className={bemBlocks.item(\"title\")} dangerouslySetInnerHTML={{__html:source.title}}></h2></a> */}\n        {/* <h3 className={bemBlocks.item(\"subtitle\")}>Released in {source.year}, rated {source.imdbRating}/10</h3> */}\n        {/* <div className={bemBlocks.item(\"text\")} dangerouslySetInnerHTML={{__html:source.plot}}></div> */}\n      </div>\n    </div>\n  )\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <SearchkitProvider searchkit={searchkit}>\n        <Layout>\n          <TopBar>\n            <div className=\"my-logo\">Product</div>\n            <SearchBox autofocus={true} searchOnChange={true} prefixQueryFields={[\"brand^1\"]}/>\n          </TopBar>\n\n        <LayoutBody>\n\n          <SideBar>\n            <HierarchicalMenuFilter fields={[\"category\"]} title=\"category\" id=\"category\"/>\n            {/* <MenuFilter\n        field=\"category.name\"\n        title=\"category\" id=\"category\"/> */}\n            {/* <RangeFilter min={0} max={10} field=\"imdbRating\" id=\"imdbRating\" title=\"IMDB Rating\" showHistogram={true}/> */}\n            {/* <InputFilter id=\"writers\" searchThrottleTime={500} title=\"Writers\" placeholder=\"Search writers\" searchOnChange={true} queryFields={[\"writers\"]} /> */}\n            {/* <RefinementListFilter id=\"actors\" title=\"Actors\" field=\"actors.raw\" size={10}/> */}\n            {/* <RefinementListFilter id=\"writersFacets\" translations={{\"facets.view_more\":\"View more writers\"}} title=\"Writers\" field=\"writers.raw\" operator=\"OR\" size={10}/> */}\n            {/* <RefinementListFilter id=\"countries\" title=\"Countries\" field=\"countries.raw\" operator=\"OR\" size={10}/> */}\n            {/* <NumericRefinementListFilter id=\"runtimeMinutes\" title=\"Length\" field=\"runtimeMinutes\" options={[\n              {title:\"All\"},\n              {title:\"up to 20\", from:0, to:20},\n              {title:\"21 to 60\", from:21, to:60},\n              {title:\"60 or more\", from:61, to:1000}\n            ]}/> */}\n          </SideBar>\n          <LayoutResults>\n            <ActionBar>\n\n              <ActionBarRow>\n                <HitsStats translations={{\n                  \"hitstats.results_found\":\"{hitCount} results found\"\n                }}/>\n                <ViewSwitcherToggle/>\n                <SortingSelector options={[\n                  {label:\"Relevance\", field:\"_score\", order:\"desc\"},\n                  {label:\"High Price\", field:\"price\", order:\"desc\"},\n                  {label:\"Low Price\", field:\"price\", order:\"asc\"}\n                ]}/>\n              </ActionBarRow>\n\n              <ActionBarRow>\n                <GroupedSelectedFilters/>\n                <ResetFilters/>\n              </ActionBarRow>\n\n            </ActionBar>\n            <ViewSwitcherHits\n                hitsPerPage={12} highlightFields={[\"brand\",\"category\"]}\n                sourceFilter={[\"brand\",\"name\",\"price\",\"category\"]}\n\n                hitComponents={[\n                  {key:\"grid\", title:\"Grid\", itemComponent:ProductHitsGridItem, defaultOption:true},\n                  {key:\"list\", title:\"List\", itemComponent:ProductHitsListItem}\n                ]}\n                scrollTo=\"body\"\n            />\n            <NoHits suggestionsField={\"title\"}/>\n            <Pagination showNumbers={true}/>\n          </LayoutResults>\n\n          </LayoutBody>\n        </Layout>\n      </SearchkitProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}